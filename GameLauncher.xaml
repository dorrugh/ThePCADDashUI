<Window x:Class="ThePCADDashUI.GameLauncher"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ThePCADDashUI"
        mc:Ignorable="d"
        Title="GameLauncher" Height="600" Width="1020"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen">
    <!--Windows Resource was used to edit the properties of the button template to make it invisible-->
    <Window.Resources>
        <Style x:Key="Invisible" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ColorButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="60" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--used to make the border background a different color, with a grid as a child to define the different columns and rows-->
    <Border Background="#272537" CornerRadius="20" Margin="0,0,10,0">
        <Grid Margin="0,0,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="75"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Ellipse Fill="Red" Grid.Row="0" HorizontalAlignment="Right"
                     Height="26"
                     Width="27"
                     Grid.Column="1"
                     VerticalAlignment="Top"
                     Margin="0,10,0,0" MouseLeftButtonDown="CloseApp"
                     />
            <Ellipse Fill="Yellow" Grid.Row="0" HorizontalAlignment="Right"
                     Height="26"
                     Width="27"
                     Grid.Column="1"
                     VerticalAlignment="Top"
                     Margin="0,10,40,0" MouseLeftButtonDown="MinimizeApp"
                     />

            <StackPanel Grid.Row="1" Grid.Column="1" Height="400" Width="800" VerticalAlignment="Top">
                <Border CornerRadius="20" >
                    <Image Source="/Images/PCADDash.png" Height="362" Width="800" Stretch="Fill" />
                    <Border.Clip>
                        <RectangleGeometry RadiusX="35"
                                       RadiusY="35"
                                       Rect="5,5,790,362"/>
                    </Border.Clip>
                </Border>
            </StackPanel>

            <!--TextBlock with my name, mainly ther to take up space-->
            <TextBlock Text="Walter T." 
                   VerticalAlignment="Center" 
                   HorizontalAlignment="Left" 
                   Foreground="White" 
                   FontSize="26" FontWeight="Bold" Margin="10,19,0,19" Width="106"/>

            <!--Invisible button with an image overlay, its nested inside of a stack panel for more efficient UI designing-->
            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Margin="0,368,0,0" Height="150">
                <Button Width="790" Height="130"  RenderTransformOrigin="1.827,0.689" FontSize="38" FontWeight="Bold" x:Name="Launcher" Click="Play_Click" Style="{DynamicResource Invisible}">
                    <Image Source="/Images/PlayButton.png" />
                </Button>
            </StackPanel>

            <!--Textbox mainly used as a space holder for the top of the application.-->
            <TextBlock Grid.Row="0" Grid.Column="1" Text="Enjoy the game!" Foreground="White"
                       FontSize="53"
                       FontWeight="Bold"
                       HorizontalAlignment="Center"/>

            <StackPanel HorizontalAlignment="Left" Width="190" Margin="0,74,0,1" Grid.RowSpan="2">

                <Label Content="Source Files (Optional)"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             FontWeight="Bold" Margin="10,0,0,0" />
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="1" Margin="10,0,0,0">
                <Border
                        Height="120"
                        Background="Purple" 
                        CornerRadius="10"
                        Margin="1,50,28,0">
                    <Grid>
                        <StackPanel>
                            <TextBlock Text="Click Me!"
                                   Foreground="White"
                                   FontSize="18"
                                   Margin="20,10,10,0" Height="42"/>
                            <Button Width="100" Height="70" Margin="32,0,33,0" Style="{DynamicResource Invisible}"
                                    Click="Download_Click"
                                    Name="Download">
                                <Image Source="/Images/downloadbtn.png"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
        </Grid>
    </Border>
</Window>
